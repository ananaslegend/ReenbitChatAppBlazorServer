@inherits BaseAuth
@page "/create-chat"

@inject RequestHandler RequestHelper

<PageTitle>Create</PageTitle>

@if (_status == AuthState.NotSet)
{
    <LoadingComponent />
}

@if (_status == AuthState.Authed)
{
    <div>
        <button class="btn btn-primary" @onclick="Private" style="margin-right: 20px">Private</button>
        <button class="btn btn-primary" @onclick="Public" style="margin-right: 20px">Public</button>
    </div>
    <br />

    @if(_state == ChatState.Private)
    {
        <CreatePrivateChat />
    }
    @if(_state == ChatState.Public)
    {
        <CreatePublicChat />
    }
}

@code {
    AuthState _status = AuthState.NotSet;
    ChatState _state;
    
    private void Private()
    {
        _state = ChatState.Private;
        StateHasChanged();
    }
    private void Public()
    {
        _state = ChatState.Public;
        StateHasChanged();
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            UserAccessVerification(await RequestHelper.GetAuthAsync("Login/GetAuthorize/"), () =>
            {
                _status = AuthState.Authed;
                StateHasChanged();
            });
        }
    }
}