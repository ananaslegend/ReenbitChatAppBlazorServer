@page "/login"

@inject NavigationManager NavManager
@inject IHttpClientFactory HttpClientFactory
@inject ILocalStorageHandler LocalStorageHelper

<PageTitle>Log in</PageTitle>

<h3>Log in, please</h3>

<EditForm Model="user" OnSubmit="HandleLogin">
    <div class="form-group" style="padding-bottom: 20px;">
        <label for="login">Your Login</label>
        <InputText id="login" class="form-controll" @bind-Value="user.UserName"/>
    </div>
    <div class="form-group" style="padding-bottom: 20px;">
        <label for="password">Password</label>
        <InputText id="password" class="form-controll" @bind-Value="user.Password" type="password"/>
    </div>

    <button class="btn btn-primary" type="submit">Login</button>
</EditForm>

@if (invalidLogin)
{
    <br/><strong>Invalid data</strong>
}

@code
{
    private LoginDTO user = new();
    private bool invalidLogin;

    private async void HandleLogin()
    {
        var client = HttpClientFactory.CreateClient("BaseClient");
        var response = await client.PostAsJsonAsync("Login/login", user);

        if (!response.IsSuccessStatusCode)
        {
            invalidLogin = true;
            StateHasChanged();
            return;
        }

        await LocalStorageHelper.LoginAsync(response, user.UserName);
        
        NavManager.NavigateTo("/", forceLoad: true);
    }
}